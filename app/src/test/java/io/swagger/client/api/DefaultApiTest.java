/*
 * Сервис приема сообщений о проблемах
 * Здесь описаны методы сервиса приема сообщений о проблемах
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Category;
import io.swagger.client.model.Complaint;
import io.swagger.client.model.ComplaintDraft;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Создает черновик сообщения о проблеме
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createomplaintDraftTest() throws ApiException {
        Long userId = null;
        ComplaintDraft response = api.createomplaintDraft(userId);

        // TODO: test validations
    }
    /**
     * Автоматически определяет категорию проблемы
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void detectComplaintCategoryTest() throws ApiException {
        ComplaintDraft body = null;
        ComplaintDraft response = api.detectComplaintCategory(body);

        // TODO: test validations
    }
    /**
     * Запрашивает список категорий проблем
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllComplaintCategoriesTest() throws ApiException {
        List<Category> response = api.getAllComplaintCategories();

        // TODO: test validations
    }
    /**
     * Запрашивает список проблем пользователя, заданного с помощью ID пользователя
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserComplaintDraftsTest() throws ApiException {
        Long userId = null;
        List<ComplaintDraft> response = api.getUserComplaintDrafts(userId);

        // TODO: test validations
    }
    /**
     * Запрашивает список проблем пользователя, заданного с помощью ID пользователя
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserComplaintsTest() throws ApiException {
        Long userId = null;
        List<Complaint> response = api.getUserComplaints(userId);

        // TODO: test validations
    }
    /**
     * Отправляет новое сообщение о проблеме на сервер
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendomplaintTest() throws ApiException {
        ComplaintDraft body = null;
        api.sendomplaint(body);

        // TODO: test validations
    }
    /**
     * Обновляет черновик сообщения о проблеме
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateomplaintDraftTest() throws ApiException {
        ComplaintDraft body = null;
        api.updateomplaintDraft(body);

        // TODO: test validations
    }
}
